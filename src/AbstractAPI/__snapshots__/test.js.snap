// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AbstractAPI with mocked global.fetch collections.info({"branchId": "branch-id", "collectionId": "collection-id", "projectId": "project-id"}) 1`] = `
Array [
  "https://api.goabstract.com/projects/project-id/collections/collection-id?",
  Object {
    "headers": Object {
      "Abstract-Api-Version": "7",
      "Accept": "application/json",
      "Authorization": "Bearer abstract-token",
      "Content-Type": "application/json",
      "X-Amzn-Trace-Id": "random-trace-id",
    },
  },
]
`;

exports[`AbstractAPI with mocked global.fetch collections.list({"branchId": "branch-id", "projectId": "project-id"}) 1`] = `
Array [
  "https://api.goabstract.com/projects/project-id/collections?branch_id=branch-id",
  Object {
    "headers": Object {
      "Abstract-Api-Version": "7",
      "Accept": "application/json",
      "Authorization": "Bearer abstract-token",
      "Content-Type": "application/json",
      "X-Amzn-Trace-Id": "random-trace-id",
    },
  },
]
`;

exports[`AbstractAPI with mocked global.fetch collections.list({"projectId": "project-id"}) 1`] = `
Array [
  "https://api.goabstract.com/projects/project-id/collections?",
  Object {
    "headers": Object {
      "Abstract-Api-Version": "7",
      "Accept": "application/json",
      "Authorization": "Bearer abstract-token",
      "Content-Type": "application/json",
      "X-Amzn-Trace-Id": "random-trace-id",
    },
  },
]
`;

exports[`AbstractAPI with mocked global.fetch commits.info({"branchId": "branch-id", "fileId": "file-id", "layerId": "layer-id", "pageId": "page-id", "projectId": "project-id", "sha": "layer-sha"}) 1`] = `
Array [
  "https://api.goabstract.com/projects/project-id/branches/branch-id/commits?fileId=file-id&layerId=layer-id",
  Object {
    "headers": Object {
      "Abstract-Api-Version": "2",
      "Accept": "application/json",
      "Authorization": "Bearer abstract-token",
      "Content-Type": "application/json",
      "X-Amzn-Trace-Id": "random-trace-id",
    },
  },
]
`;

exports[`AbstractAPI with mocked global.fetch commits.info({"branchId": "branch-id", "fileId": "file-id", "projectId": "project-id"}) 1`] = `
Array [
  "https://api.goabstract.com/projects/project-id/branches/branch-id/commits?fileId=file-id",
  Object {
    "headers": Object {
      "Abstract-Api-Version": "2",
      "Accept": "application/json",
      "Authorization": "Bearer abstract-token",
      "Content-Type": "application/json",
      "X-Amzn-Trace-Id": "random-trace-id",
    },
  },
]
`;

exports[`AbstractAPI with mocked global.fetch commits.info({"branchId": "branch-id", "projectId": "project-id"}) 1`] = `
Array [
  "https://api.goabstract.com/projects/project-id/branches/branch-id/commits?",
  Object {
    "headers": Object {
      "Abstract-Api-Version": "2",
      "Accept": "application/json",
      "Authorization": "Bearer abstract-token",
      "Content-Type": "application/json",
      "X-Amzn-Trace-Id": "random-trace-id",
    },
  },
]
`;

exports[`AbstractAPI with mocked global.fetch commits.list({"branchId": "branch-id", "fileId": "file-id", "layerId": "layer-id", "pageId": "page-id", "projectId": "project-id", "sha": "layer-sha"}) 1`] = `
Array [
  "https://api.goabstract.com/projects/project-id/branches/branch-id/commits?fileId=file-id&layerId=layer-id",
  Object {
    "headers": Object {
      "Abstract-Api-Version": "2",
      "Accept": "application/json",
      "Authorization": "Bearer abstract-token",
      "Content-Type": "application/json",
      "X-Amzn-Trace-Id": "random-trace-id",
    },
  },
]
`;

exports[`AbstractAPI with mocked global.fetch commits.list({"branchId": "branch-id", "fileId": "file-id", "projectId": "project-id"}) 1`] = `
Array [
  "https://api.goabstract.com/projects/project-id/branches/branch-id/commits?fileId=file-id",
  Object {
    "headers": Object {
      "Abstract-Api-Version": "2",
      "Accept": "application/json",
      "Authorization": "Bearer abstract-token",
      "Content-Type": "application/json",
      "X-Amzn-Trace-Id": "random-trace-id",
    },
  },
]
`;

exports[`AbstractAPI with mocked global.fetch commits.list({"branchId": "branch-id", "projectId": "project-id"}) 1`] = `
Array [
  "https://api.goabstract.com/projects/project-id/branches/branch-id/commits?",
  Object {
    "headers": Object {
      "Abstract-Api-Version": "2",
      "Accept": "application/json",
      "Authorization": "Bearer abstract-token",
      "Content-Type": "application/json",
      "X-Amzn-Trace-Id": "random-trace-id",
    },
  },
]
`;

exports[`AbstractAPI with mocked global.fetch data.layer({"branchId": "branch-id", "fileId": "file-id", "layerId": "layer-id", "pageId": "page-id", "projectId": "project-id", "sha": "layer-sha"}) 1`] = `
Array [
  "https://api.goabstract.com/projects/project-id/branches/branch-id/commits/layer-sha/files/file-id/layers/layer-id/data",
  Object {
    "headers": Object {
      "Accept": "application/json",
      "Authorization": "Bearer abstract-token",
      "Content-Type": "application/json",
      "X-Amzn-Trace-Id": "random-trace-id",
    },
  },
]
`;

exports[`AbstractAPI with mocked global.fetch data.layer({"branchId": "branch-id", "fileId": "file-id", "layerId": "layer-id", "pageId": "page-id", "projectId": "project-id", "sha": "sha"}) 1`] = `
Array [
  "https://api.goabstract.com/projects/project-id/branches/branch-id/commits/sha/files/file-id/layers/layer-id/data",
  Object {
    "headers": Object {
      "Accept": "application/json",
      "Authorization": "Bearer abstract-token",
      "Content-Type": "application/json",
      "X-Amzn-Trace-Id": "random-trace-id",
    },
  },
]
`;

exports[`AbstractAPI with mocked global.fetch files.info({"branchId": "branch-id", "fileId": "file-id", "projectId": "project-id"}) 1`] = `
Array [
  "https://api.goabstract.com/projects/project-id/branches/branch-id/files",
  Object {
    "headers": Object {
      "Accept": "application/json",
      "Authorization": "Bearer abstract-token",
      "Content-Type": "application/json",
      "X-Amzn-Trace-Id": "random-trace-id",
    },
  },
]
`;

exports[`AbstractAPI with mocked global.fetch files.list({"branchId": "branch-id", "projectId": "project-id"}) 1`] = `
Array [
  "https://api.goabstract.com/projects/project-id/branches/branch-id/files",
  Object {
    "headers": Object {
      "Accept": "application/json",
      "Authorization": "Bearer abstract-token",
      "Content-Type": "application/json",
      "X-Amzn-Trace-Id": "random-trace-id",
    },
  },
]
`;

exports[`AbstractAPI with mocked global.fetch layers.info({"branchId": "branch-id", "fileId": "file-id", "layerId": "layer-id", "pageId": "page-id", "projectId": "project-id", "sha": "layer-sha"}) 1`] = `
Array [
  "https://api.goabstract.com/projects/project-id/branches/branch-id/commits/layer-sha/files/file-id/layers/layer-id",
  Object {
    "headers": Object {
      "Abstract-Api-Version": "2",
      "Accept": "application/json",
      "Authorization": "Bearer abstract-token",
      "Content-Type": "application/json",
      "X-Amzn-Trace-Id": "random-trace-id",
    },
  },
]
`;

exports[`AbstractAPI with mocked global.fetch layers.list({"branchId": "branch-id", "fileId": "file-id", "projectId": "project-id"}) 1`] = `
Array [
  "https://api.goabstract.com/projects/project-id/branches/branch-id/files/file-id/layers?",
  Object {
    "headers": Object {
      "Abstract-Api-Version": "2",
      "Accept": "application/json",
      "Authorization": "Bearer abstract-token",
      "Content-Type": "application/json",
      "X-Amzn-Trace-Id": "random-trace-id",
    },
  },
]
`;

exports[`AbstractAPI with mocked global.fetch pages.list({"branchId": "branch-id", "fileId": "file-id", "projectId": "project-id"}) 1`] = `
Array [
  "https://api.goabstract.com/projects/project-id/branches/branch-id/files/file-id/pages",
  Object {
    "headers": Object {
      "Accept": "application/json",
      "Authorization": "Bearer abstract-token",
      "Content-Type": "application/json",
      "X-Amzn-Trace-Id": "random-trace-id",
    },
  },
]
`;
