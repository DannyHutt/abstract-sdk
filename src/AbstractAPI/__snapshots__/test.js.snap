// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AbstractAPI with mocked global.fetch changesets.info({"projectId":"project-id","branchId":"branch-id","sha":"commit-sha"}) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/projects/project-id/branches/branch-id/commits/commit-sha/changeset",
      Object {
        "headers": Object {
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;

exports[`AbstractAPI with mocked global.fetch collections.info({"projectId":"project-id","branchId":"branch-id","collectionId":"collection-id"}) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/projects/project-id/collections/collection-id?",
      Object {
        "headers": Object {
          "Abstract-Api-Version": "7",
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;

exports[`AbstractAPI with mocked global.fetch collections.list({"projectId":"project-id","branchId":"branch-id"}) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/projects/project-id/collections?branch_id=branch-id",
      Object {
        "headers": Object {
          "Abstract-Api-Version": "7",
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;

exports[`AbstractAPI with mocked global.fetch collections.list({"projectId":"project-id"}) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/projects/project-id/collections?",
      Object {
        "headers": Object {
          "Abstract-Api-Version": "7",
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;

exports[`AbstractAPI with mocked global.fetch commits.info({"projectId":"project-id","branchId":"branch-id","fileId":"file-id"}) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/projects/project-id/branches/branch-id/commits?fileId=file-id",
      Object {
        "headers": Object {
          "Abstract-Api-Version": "2",
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;

exports[`AbstractAPI with mocked global.fetch commits.info({"projectId":"project-id","branchId":"branch-id","sha":"layer-sha","fileId":"file-id","pageId":"page-id","layerId":"layer-id"}) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/projects/project-id/branches/branch-id/commits?fileId=file-id&layerId=layer-id",
      Object {
        "headers": Object {
          "Abstract-Api-Version": "2",
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;

exports[`AbstractAPI with mocked global.fetch commits.info({"projectId":"project-id","branchId":"branch-id"}) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/projects/project-id/branches/branch-id/commits?",
      Object {
        "headers": Object {
          "Abstract-Api-Version": "2",
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;

exports[`AbstractAPI with mocked global.fetch commits.list({"projectId":"project-id","branchId":"branch-id","fileId":"file-id"}) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/projects/project-id/branches/branch-id/commits?fileId=file-id",
      Object {
        "headers": Object {
          "Abstract-Api-Version": "2",
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;

exports[`AbstractAPI with mocked global.fetch commits.list({"projectId":"project-id","branchId":"branch-id","sha":"layer-sha","fileId":"file-id","pageId":"page-id","layerId":"layer-id"}) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/projects/project-id/branches/branch-id/commits?fileId=file-id&layerId=layer-id",
      Object {
        "headers": Object {
          "Abstract-Api-Version": "2",
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;

exports[`AbstractAPI with mocked global.fetch commits.list({"projectId":"project-id","branchId":"branch-id"}) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/projects/project-id/branches/branch-id/commits?",
      Object {
        "headers": Object {
          "Abstract-Api-Version": "2",
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;

exports[`AbstractAPI with mocked global.fetch data.layer({"projectId":"project-id","branchId":"branch-id","sha":"layer-sha","fileId":"file-id","pageId":"page-id","layerId":"layer-id"}) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/projects/project-id/branches/branch-id/commits/layer-sha/files/file-id/layers/layer-id/data",
      Object {
        "headers": Object {
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;

exports[`AbstractAPI with mocked global.fetch data.layer({"projectId":"project-id","branchId":"branch-id","sha":"sha","fileId":"file-id","pageId":"page-id","layerId":"layer-id"}) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/projects/project-id/branches/branch-id/commits/sha/files/file-id/layers/layer-id/data",
      Object {
        "headers": Object {
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;

exports[`AbstractAPI with mocked global.fetch files.info({"projectId":"project-id","branchId":"branch-id","fileId":"file-id"}) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/projects/project-id/branches/branch-id/files",
      Object {
        "headers": Object {
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;

exports[`AbstractAPI with mocked global.fetch files.list({"projectId":"project-id","branchId":"branch-id"}) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/projects/project-id/branches/branch-id/files",
      Object {
        "headers": Object {
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;

exports[`AbstractAPI with mocked global.fetch layers.info({"projectId":"project-id","branchId":"branch-id","sha":"layer-sha","fileId":"file-id","pageId":"page-id","layerId":"layer-id"}) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/projects/project-id/branches/branch-id/commits/layer-sha/files/file-id/layers/layer-id",
      Object {
        "headers": Object {
          "Abstract-Api-Version": "2",
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;

exports[`AbstractAPI with mocked global.fetch layers.list({"projectId":"project-id","branchId":"branch-id","fileId":"file-id"}) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/projects/project-id/branches/branch-id/files/file-id/layers?",
      Object {
        "headers": Object {
          "Abstract-Api-Version": "2",
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;

exports[`AbstractAPI with mocked global.fetch organizations.list(undefined) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/organizations",
      Object {
        "headers": Object {
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;

exports[`AbstractAPI with mocked global.fetch pages.list({"projectId":"project-id","branchId":"branch-id","fileId":"file-id"}) 1`] = `
Object {
  "fetch": Array [
    Array [
      "https://api.goabstract.com/projects/project-id/branches/branch-id/files/file-id/pages",
      Object {
        "headers": Object {
          "Accept": "application/json",
          "Authorization": "Bearer abstract-token",
          "Content-Type": "application/json",
          "User-Agent": "Abstract SDK 0.1",
          "X-Amzn-Trace-Id": "random-trace-id",
        },
      },
    ],
  ],
}
`;
