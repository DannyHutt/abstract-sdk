# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  checkout:
    docker:
      - image: circleci/node:10-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/repo
          paths: .

  install:
    docker:
      - image: circleci/node:10-browsers
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "yarn.lock" }}
            - v4-dependencies- # fallback to latest cache if no exact match is found
      - run: yarn install --frozen-lockfile
      - save_cache:
          key: v4-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - .yarn-cache

  test:
    docker:
      - image: circleci/node:10-browsers
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "yarn.lock" }}
            - v4-dependencies- # fallback to latest cache if no exact match is found
      - run: yarn ci

  deploy:
    docker:
      - image: circleci/node:10-browsers
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "yarn.lock" }}
            - v4-dependencies- # fallback to latest cache if no exact match is found
      - run: sh .circleci/deploy
  publish:
    docker:
      - image: circleci/node:10-browsers
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          keys:
            - v4-dependencies-{{ checksum "yarn.lock" }}
            - v4-dependencies- # fallback to latest cache if no exact match is found
      - run: npm publish --access public

workflows:
  version: 2
  build:
    jobs:
      - checkout
      - install:
          requires:
            - checkout
      - test:
          requires:
            - install
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: documentation
      - publish:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/